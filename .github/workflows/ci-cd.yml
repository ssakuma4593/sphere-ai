name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 src/python --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/python --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: |
        pip install black
        black --check src/python

    - name: Type check with mypy
      run: |
        pip install mypy
        mypy src/python --ignore-missing-imports

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests/test_python_app.py --cov=src/python --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python
        name: python-${{ matrix.python-version }}

  node-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint with ESLint
      run: npm run lint

    - name: Format check with Prettier
      run: |
        npm install prettier
        npx prettier --check src/node

    - name: Run tests
      run: npm test

  integration-tests:
    runs-on: ubuntu-latest
    needs: [python-tests, node-tests]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      run: npm ci

    - name: Start Python server
      run: |
        cd src/python
        python app.py &
        sleep 5
      env:
        PORT: 5000

    - name: Start Node.js server
      run: |
        npm start &
        sleep 5
      env:
        PORT: 3000

    - name: Run integration tests
      run: |
        curl -f http://localhost:5000/ || exit 1
        curl -f http://localhost:3000/ || exit 1
        echo "Integration tests passed!"